image: docker:27.3.1
services:
  - name: docker:27.3.1-dind
    alias: docker

stages:
  - build
  - test
  - deploy

before_script:
  - docker version
  - docker compose version

build-job:
  stage: build
  tags: [build]
  script:
    - docker compose build

# test-service1-job:
#   stage: test
#   tags: [test]
#   script:
#     - docker image ls
#     - docker run --name s1-test --rm -p 8199:8199 devops-project-esa-service1 &
#     - sleep 5
#     - curl telnet://localhost:8199 | grep "Service1:"
#     - docker stop s1-test

# Testing service2 by starting it in a container, exposing port 8200, curling the service
# and verifying that the response has something legible ("Service2").
test-service2-job:
  stage: test
  tags: [test]
  script:
    - docker image ls
    - docker run --name s2-test --rm -p 8200:8200 devops-project-esa-service2 &
    - sleep 5
    - curl telnet://localhost:8200 | grep "Service2:"
    - docker stop s2-test

test-e2e:
  stage: test
  tags: [test]
  script:
    - docker compose up -d
    - sleep 5
    - |
      EXPECTED=("Service1:" "Service2:" "Filesystem" "PID" "TTY" "STAT" "COMMAND")
      RESPONSE=$(curl --netrc-file login-curl.txt http://localhost:8198/request)
      for STR in "${EXPECTED[@]}"; do
        if [[ ! "$RESPONSE" =~ "$STR" ]]; then
          echo "Response missing expected string '$STR'"
          docker compose down
          exit 1
        fi
      done
      echo "Test successful"
    - docker compose down

deploy-job:
  stage: deploy
  tags: [deploy]
  script:
    - docker compose up -d
